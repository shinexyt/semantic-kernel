#
# This workflow will package the Copilot Chat application for deployment.
#

name: copilot-chat-package

on:
  pull_request:
    branches: [ "main", "feature*" ]
    paths:
      - 'samples/apps/copilot-chat-app/**'
  push:
    branches: [ "main", "feature*" ]
    paths:
      - 'samples/apps/copilot-chat-app/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    strategy:
        fail-fast: false
        matrix:
          include:
          - { dotnet: '6.0', configuration: Release, os: ubuntu-latest }

    runs-on: ${{ matrix.os }}
    env:
      NUGET_CERT_REVOCATION_MODE: offline
    steps:
    - uses: actions/checkout@v3
      with:
        clean: true
        
    - name: Pull container dotnet/sdk:${{ matrix.dotnet }}
      run: docker pull mcr.microsoft.com/dotnet/sdk:${{ matrix.dotnet }}

    - name: Package Copilot Chat WebAPI
      run: |
        chmod +x $(pwd)/samples/apps/copilot-chat-app/deploy/package-webapi.sh;
        docker run --rm -v $(pwd):/app -w /app -e GITHUB_ACTIONS='true' mcr.microsoft.com/dotnet/sdk:${{ matrix.dotnet }} /bin/sh -c "/app/samples/apps/copilot-chat-app/deploy/package-webapi.sh --no-zip";
  
    - name: Set version tag
      id: versiontag
      run: |
        VERSION_TAG="$(date +'%Y%m%d').${{ github.run_number }}.${{ github.run_attempt }}"
        echo $VERSION_TAG
        echo "versiontag=$VERSION_TAG" >> $GITHUB_OUTPUT

    - name: Upload package to artifacts
      uses: actions/upload-artifact@v3
      with:
        name: copilotchat-webapi-${{ steps.versiontag.outputs.versiontag }}
        path: ./samples/apps/copilot-chat-app/deploy/publish
